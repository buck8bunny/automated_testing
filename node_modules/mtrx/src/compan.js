const create = require('mtrx/src/create'),
      clone = require('mtrx/src/clone'),
      cof = require('mtrx/src/cof'),
      det = require('mtrx/src/det'),
      map = require('mtrx/src/map'),
      inverse = require('mtrx/src/inverse'),
      isSquare = require('mtrx/src/isSquare'),
      isSingular = require('mtrx/src/isSingular');

function compan(matrix) {
  if (!isSquare(matrix)) throw Error(matrix + ' is not a Square matrix.');
  if (!isSingular(matrix)) {
    const d = det(matrix);
    return map(inverse(matrix), (n, i, j) => n * d);
  } else {
    const n = matrix.length;
    return (n > 1)
      ? create((i, j) => det(cof(matrix, i, j)))(n)
      : clone(matrix);
  }
}

module.exports = compan;
